<?xml version="1.0" ?><api><package name="java.lang.ref">
<class abstract="false" deprecated="not deprecated" extends="java.lang.ref.Reference" final="false" name="PhantomReference" static="false" visibility="public">
<constructor deprecated="not deprecated" final="false" name="PhantomReference" static="false" type="java.lang.ref.PhantomReference" visibility="public">
<parameter name="r" type="T">
</parameter>
<parameter name="q" type="java.lang.ref.ReferenceQueue&lt;? super T&gt;">
</parameter>
</constructor>
</class>
<class abstract="true" deprecated="not deprecated" extends="java.lang.Object" final="false" name="Reference" static="false" visibility="public">
<method abstract="false" deprecated="not deprecated" final="false" name="clear" native="false" return="void" static="false" synchronized="false" visibility="public">
</method>
<method abstract="false" deprecated="not deprecated" final="false" name="enqueue" native="false" return="boolean" static="false" synchronized="false" visibility="public">
</method>
<method abstract="false" deprecated="not deprecated" final="false" name="get" native="false" return="T" static="false" synchronized="false" visibility="public">
</method>
<method abstract="false" deprecated="not deprecated" final="false" name="isEnqueued" native="false" return="boolean" static="false" synchronized="false" visibility="public">
</method>
</class>
<class abstract="false" deprecated="not deprecated" extends="java.lang.Object" final="false" name="ReferenceQueue" static="false" visibility="public">
<constructor deprecated="not deprecated" final="false" name="ReferenceQueue" static="false" type="java.lang.ref.ReferenceQueue" visibility="public">
</constructor>
<method abstract="false" deprecated="not deprecated" final="false" name="poll" native="false" return="java.lang.ref.Reference&lt;? extends T&gt;" static="false" synchronized="true" visibility="public">
</method>
<method abstract="false" deprecated="not deprecated" final="false" name="remove" native="false" return="java.lang.ref.Reference&lt;? extends T&gt;" static="false" synchronized="false" visibility="public">
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method abstract="false" deprecated="not deprecated" final="false" name="remove" native="false" return="java.lang.ref.Reference&lt;? extends T&gt;" static="false" synchronized="true" visibility="public">
<parameter name="timeout" type="long">
</parameter>
<exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException">
</exception>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
</class>
<class abstract="false" deprecated="not deprecated" extends="java.lang.ref.Reference" final="false" name="SoftReference" static="false" visibility="public">
<constructor deprecated="not deprecated" final="false" name="SoftReference" static="false" type="java.lang.ref.SoftReference" visibility="public">
<parameter name="r" type="T">
</parameter>
</constructor>
<constructor deprecated="not deprecated" final="false" name="SoftReference" static="false" type="java.lang.ref.SoftReference" visibility="public">
<parameter name="r" type="T">
</parameter>
<parameter name="q" type="java.lang.ref.ReferenceQueue&lt;? super T&gt;">
</parameter>
</constructor>
</class>
<class abstract="false" deprecated="not deprecated" extends="java.lang.ref.Reference" final="false" name="WeakReference" static="false" visibility="public">
<constructor deprecated="not deprecated" final="false" name="WeakReference" static="false" type="java.lang.ref.WeakReference" visibility="public">
<parameter name="r" type="T">
</parameter>
</constructor>
<constructor deprecated="not deprecated" final="false" name="WeakReference" static="false" type="java.lang.ref.WeakReference" visibility="public">
<parameter name="r" type="T">
</parameter>
<parameter name="q" type="java.lang.ref.ReferenceQueue&lt;? super T&gt;">
</parameter>
</constructor>
</class>
</package></api>